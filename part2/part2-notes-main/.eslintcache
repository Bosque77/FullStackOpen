[{"/home/forest/Documents/REPOS/FullStackOpen/part2/part2-notes-main/src/index.js":"1","/home/forest/Documents/REPOS/FullStackOpen/part2/part2-notes-main/src/App.js":"2","/home/forest/Documents/REPOS/FullStackOpen/part2/part2-notes-main/src/components/Note.js":"3","/home/forest/Documents/REPOS/FullStackOpen/part2/part2-notes-main/src/services/Notes.js":"4"},{"size":139,"mtime":1632624182449,"results":"5","hashOfConfig":"6"},{"size":2474,"mtime":1632625146364,"results":"7","hashOfConfig":"6"},{"size":288,"mtime":1632599864888,"results":"8","hashOfConfig":"6"},{"size":819,"mtime":1632960185603,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"uawdo7",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/forest/Documents/REPOS/FullStackOpen/part2/part2-notes-main/src/index.js",[],["20","21"],"/home/forest/Documents/REPOS/FullStackOpen/part2/part2-notes-main/src/App.js",["22","23"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/Notes'\n\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\n    'a new note...'\n  )\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n\n  const toggleImportanceOf = id => {\n    const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App","/home/forest/Documents/REPOS/FullStackOpen/part2/part2-notes-main/src/components/Note.js",[],"/home/forest/Documents/REPOS/FullStackOpen/part2/part2-notes-main/src/services/Notes.js",["24"],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":2,"column":8,"nodeType":"31","messageId":"32","endLine":2,"endColumn":13},{"ruleId":"29","severity":1,"message":"33","line":62,"column":11,"nodeType":"31","messageId":"32","endLine":62,"endColumn":14},{"ruleId":"34","severity":1,"message":"35","line":31,"column":1,"nodeType":"36","endLine":31,"endColumn":42},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]